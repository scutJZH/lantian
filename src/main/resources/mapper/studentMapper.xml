<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.scut.dao.IStudentDao" >
	<select id="getStudentByTel" resultMap="studentMap" parameterType="String">
		select * from student where phone = #{telnumber}
	</select>
	
	<update id="updateToken">
		update student set token = #{token} where student_id = #{studentId}
	</update>
	
	<insert id="insertStudent" parameterType="Student">
		 insert into student 
		 (student_id, phone, password, create_time, pic_path, nickname, birthday, sex,
		 school_id, token, class_id_list, state, verify_code)
  		 values (#{student.id}, #{student.phone}, #{student.password, javaType=String, jdbcType=VARCHAR},
  		 #{student.createTime, javaType=Date, jdbcType=DATE}, #{student.picPath},
  		 #{student.nickname, javaType=String, jdbcType=VARCHAR}, #{student.birthday, javaType=Date, jdbcType=DATE},
  		 #{student.sex},#{student.schoolId, javaType=String, jdbcType=VARCHAR}, #{student.token, javaType=String, jdbcType=VARCHAR},
  		 #{student.classIdList, javaType=String, jdbcType=VARCHAR}, #{student.state}, #{student.verifyCode, javaType=String, jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertUser" parameterType="User">
		insert into student 
		 (student_id, phone, password, create_time, pic_path, nickname, birthday, sex,
		 token, state, verify_code)
  		 values (#{user.id}, #{user.phone}, #{user.password, javaType=String, jdbcType=VARCHAR},
  		 #{user.createTime, javaType=Date, jdbcType=DATE}, #{user.picPath},
  		 #{user.nickname, javaType=String, jdbcType=VARCHAR}, #{user.birthday, javaType=Date, jdbcType=DATE},
  		 #{user.sex}, #{user.token, javaType=String, jdbcType=VARCHAR}, #{user.state},
  		 #{user.verifyCode, javaType=String, jdbcType=VARCHAR})
	</insert>
	
	<update id="updateUser" parameterType="User">
		update student set
		phone = #{user.phone},
   	 	password = #{user.password},
   	 	create_time = #{user.createTime},
    	pic_path = #{user.picPath},
    	nickname = #{user.nickname},
    	birthday = #{user.birthday, javaType=Date, jdbcType=DATE},
    	sex = #{user.sex},
    	token = #{user.token, javaType=String, jdbcType=VARCHAR},
    	state = #{user.state},
    	verify_code = #{user.verifyCode, javaType=String, jdbcType=VARCHAR}
  		where student_id = #{user.id}
	</update>
	
	<select id="getStudentById" resultMap="studentMap" parameterType="String">
		select * from student where student_id = #{studentId}
	</select>
	
	<select id="getClassIDBySId" resultType="hashmap" parameterType="String">
		select class_id as classId from student where student_id = #{studentId}
	</select>
	
	<update id="updateStudent" parameterType="Student">
		update student set
		phone = #{student.phone},
   	 	password = #{student.password},
   	 	create_time = #{student.createTime},
    	pic_path = #{student.picPath},
    	nickname = #{student.nickname},
    	birthday = #{student.birthday, javaType=Date, jdbcType=DATE},
    	sex = #{student.sex},
    	class_id_list = #{student.classIdList, javaType=String, jdbcType=VARCHAR},
    	token = #{student.token, javaType=String, jdbcType=VARCHAR},
    	school_id = #{student.schoolId, javaType=String, jdbcType=VARCHAR},
    	state = #{student.state},
    	verify_code = #{student.verifyCode, javaType=String, jdbcType=VARCHAR}
  		where student_id = #{student.id}
	</update>
	
	<resultMap type="Student" id="studentMap">
		<id property="id" column="student_id"/>
		<result property="phone" column="phone"/>
		<result property="password" column="password"/>
		<result property="createTime" column ="create_time"/>
		<result property="token" column = "token"/>
		<result property="picPath" column="pic_path"/>
		<result property="birthday" column="birthday"/>
		<result property="sex" column="sex"/>
		<result property="nickname" column="nickname"/>
		<result property="state" column="state"/>
		<result property="verifyCode" column="verify_code"/>
		<result property="schoolId" column="school_id"/>
		<result property="classIdList" column="class_id_list"/>
	</resultMap>
	<!--getStudentByClassId  -->
	<select id="getStudentByClassId" resultMap="getStudentByClassIdHashMap">
	select student_id, nickname from student where class_id=#{classId}
	</select>
	<resultMap type="HashMap" id="getStudentByClassIdHashMap">
	<id property="studentId" column="student_id"/>
	<result property="nickname" column="nickname"/>
	</resultMap>
	<select id="getstudentidbyclass" resultMap="getstudentidbyclassidMap">
	select student_id from student_class where class_id=#{classId}
	</select>
	
	<resultMap type="HashMap" id="getstudentidbyclassidMap">
	
	<id property="studentId" column="student_id"/>
	
	</resultMap>
	<!-- checkStudentExist -->
	<select id="checkStudentExist" resultMap="checkStudentExistHashMap">
		select student_id,class_id_list from student where student_id=#{studentId}
	</select>
	<resultMap id="checkStudentExistHashMap" type="HashMap">
	<id property="studentId" column="student_id"/>
	<result property="classId" column="class_id_list"/>
	</resultMap>
	
	<!-- addStudent --><!-- this tab associate other tab,maybe problem -->
	<update id="addStudent">
	update student set class_id_list=#{classId} where student_id=#{studentId}
	</update>
	<!-- getStudentIdByClassId -->
	<select id="getStudentIdByClassId" resultMap="getStudentIdByClassIdHashMap">
	select student_id from student where class_id_list=#{classId}
	</select>
	<resultMap type="HashMap" id="getStudentIdByClassIdHashMap">
	<id property="studentId" column="student_id"/>
	</resultMap>
</mapper>