<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.scut.dao.IStudent_studyDao">
	<select id="getStudentStudyBySId" resultType="hashmap" parameterType="String">
		select study_id as studyId,submit_time as submitTime,score, used_time as usedTime,start_time as startTime from student_study where student_id = #{studentId} AND submit = #{submit}
	</select>
	
	<select id="getStudentStudy" resultType="hashmap">
		select submit_time as submitTime,score, used_time as usedTime,start_time as startTime,choice_score as choiceScore from student_study where student_id = #{studentId} AND study_id = #{studyId}
	</select>
	
	<update id="updateCorrectedStatus">
		update student_study set score=#{totalScore},corrected=1,teacher_id=#{teacherId}
		where student_id=#{studentId} AND study_id=#{studyId}
    </update>
    
<!-- 9.获取统计排名详情,但缺少学生名字，需要从student表查再合并在这个结果中,这里注意每个学生只能做同一个作业1次才能用了natural join -->

	<select id="getRankDetails" resultMap="getRankDetailsHashMap">
		select student_id,score,nickname from student_study natural join student where study_id=#{studyId} order by score desc
	</select>
	<resultMap id="getRankDetailsHashMap" type="java.util.LinkedHashMap">
		<id property="studentId" column="student_id"></id>
		<result property="score" column="score"/>
		<result property="nickname" column="nickname"/>
	</resultMap>
	
	<!-- 11.	获取批改作业学生列表（11-13为批改作业补充） -->
	<select id="getCorrectStudentList" resultMap="getCorrectStudentListHashMap">
	select student_id,nickname,choice_score,score from student_study
	natural join student where study_id=#{studyId} order by score desc
	<!-- 这里少用了一个teacherId参数，可能有问题 -->
	</select>
	<resultMap id="getCorrectStudentListHashMap" type="java.util.HashMap">
	<id property="studentId" column="student_id"></id>
	<result property="nickname" column="nickname"/>
	<result property="choiceScore" column="choice_score"/>
	<result property="score" column="score"/>
	</resultMap>
	
	<update id="updateSubmit">
		update student_study set submit=1,choice_score=#{choiceScore}
		where student_id=#{studentId} AND study_id=#{studyId}
    </update>
    
	<!-- assignmentHomework -->
<insert id="assignmentHomework">
insert into student_study (study_id,student_id,submit,score,choice_score)
values (#{studyId},#{studentId},#{submit},#{score},0)
</insert>
<!-- autoCorrect -->
<update id="autoCorrect">
update student_study set choice_score=#{choiceScore} where student_id=#{studentId} and paper_id=#{paperId}

</update>

	<select id="getChildStudyInfoList" resultMap="childStudyInfoMap">
		select
		study.study_id, study_name, assign_time, dead_line, max_score, rank,
		submit,
		submit_time, score, used_time, start_time
		from student_study left join study on
		student_study.study_id = study.study_id
		left join paper on
		study.paper_id = paper.paper_id
		where student_id = #{studentId} and
		class_id = #{classId} and subject_id = #{subjectId}
		and paper_type = #{studyType}
	</select>

	<resultMap type="hashmap" id="childStudyInfoMap">
		<id property="studyId" column="study.study_id" />
		<result property="studyName" column="study_name" />
		<result property="assignTime" column="assign_time" />
		<result property="deadline" column="dead_line" />
		<result property="max_score" column="maxScore" />
		<result property="aveScore" column="ave_score" />
		<result property="rank" column="rank" />
		<result property="submit" column="submit" />
		<result property="submitTime" column="submit_time" />
		<result property="score" column="score" />
		<result property="startTime" column="start_time" />
		<result property="usedTime" column="used_time" />
	</resultMap>
	<!-- 2.deleteList -->
	<delete id="deleteList">
	delete from student_study where study_id in(
	<foreach collection="studyIdList" index="index" item="item" separator=",">
	#{item}
	</foreach>)
	</delete>
<!-- removeStudent -->
<delete id="removeStudent">
delete from student_study where student_id=#{studentId} and teacher_id=#{teacherId}
</delete>
</mapper>